variable.name = "compound",
value.name = "percent_activity")
data$compound <- as.character(data$compound)
data$percent_activity <- as.numeric(data$percent_activity)
data <- data[complete.cases(data), ]
data <- select(data, kinase, compound, percent_activity)
head(data)
anastassiadis2011 <- data
save(anastassiadis2011, file = "~/home/github/local/kis/anastassiadis2011.RData")
shiny::runApp('home/github/local/kis')
shiny::runApp('home/github/local/kis')
head(data)
data <- raw[3:302, 1:179]
inhibitor_names <- raw[1, 1:179]
inhibitor_names <- str_replace_all(unlist(inhibitor_names), "[ ]+", " ")
inhibitor_names <- str_replace_all(unlist(inhibitor_names), "\x9a", "o")
#inhibitors <- raw[2, 1:179]
colnames(data) <- paste(inhibitor_names, "0.5uM", sep = "@")
colnames(data)[1] <- "kinase"
# convert data to long format
data <- melt(data,
id.vars = "kinase",
variable.name = "compound",
value.name = "percent_activity")
data$compound <- as.character(data$compound)
data$percent_activity <- as.numeric(data$percent_activity)
data <- data[complete.cases(data), ]
data <- select(data, kinase, compound, percent_activity)
anastassiadis2011 <- data
save(anastassiadis2011, file = "~/home/github/local/kis/anastassiadis2011.RData")
shiny::runApp('home/github/local/kis')
path <- "~/home/github/local/kis/data/gao2013.csv"
raw <- read.csv(path,
skip = 1,
stringsAsFactors = FALSE,
check.names = TRUE,
header = FALSE)
# clean data
data <- raw[2:235, ]
inhibitor_names <- unlist(raw[1, -1])
Encoding(inhibitor_names) <- "UTF-8"
inhibitor_names <- str_split(inhibitor_names, " @ ")
inhibitors <- sapply(inhibitor_names, "[", 1)
inhibitors <- str_replace(inhibitors, "\x9a", "o")
concentration <- sapply(inhibitor_names, "[", 2)
concentration <- str_extract(concentration, "^[10]{1,2}")
inhibitors <- paste(inhibitors, concentration, sep = "@")
inhibitors <- c("kinase", inhibitors)
colnames(data) <- inhibitors
data <- data %>%
melt(id.vars = "kinase", variable.name = "compound", value.name = "percent_activity")
data$percent_activity <- as.numeric(data$percent_activity)
data <- data[complete.cases(data), ]
head(data)
gao2013 <- data
save(gao2013, file = "~/home/github/local/kis/gao2013.RData")
shiny::runApp('home/github/local/kis')
help(package=tidyr)
path_screen <- "~/home/github/local/kis/data/kinase_inhibitor_results_2014-10-18T04-26-51.csv"
raw <- read.csv(path_screen, stringsAsFactors = FALSE)
data <- raw %>% select(Kinase, CNumber, Screen.Conc, Inhibition)
names(data) <- c("kinase", "compound", "concentration", "percent_activity")
path_names <- "~/home/github/local/kis/data/kinase_inhibitor_list_2014-10-18T04-00-06.csv"
inhibitor_names <- read.csv(path_names, stringsAsFactors = FALSE)
inhibitors <- inhibitor_names$Inhibitor
names(inhibitors) <- inhibitor_names$CNumber
data$compound <- inhibitors[as.character(data$compound)]
data$concentration <- str_replace(data$concentration, " ", "")
data$concentration <- as.numeric(data$concentration)
data$percent_activity <- as.numeric(data$percent_activity)
data <- unite(data, compound, concentration, sep = "@")
data <- arrange(data, kinase)
head(data)
data <- unite_(data, compound, concentration, sep = "@")
path_screen <- "~/home/github/local/kis/data/kinase_inhibitor_results_2014-10-18T04-26-51.csv"
raw <- read.csv(path_screen, stringsAsFactors = FALSE)
data <- raw %>% select(Kinase, CNumber, Screen.Conc, Inhibition)
names(data) <- c("kinase", "compound", "concentration", "percent_activity")
path_names <- "~/home/github/local/kis/data/kinase_inhibitor_list_2014-10-18T04-00-06.csv"
inhibitor_names <- read.csv(path_names, stringsAsFactors = FALSE)
inhibitors <- inhibitor_names$Inhibitor
names(inhibitors) <- inhibitor_names$CNumber
data$compound <- inhibitors[as.character(data$compound)]
data$concentration <- str_replace(data$concentration, " ", "")
data$concentration <- as.numeric(data$concentration)
data$percent_activity <- as.numeric(data$percent_activity)
data <- data %>%
unite(data, compound, concentration, sep = "@") %>%
arrange(kinase)
head(data)
library(stringr)
library(reshape2)
library(tidyr)
library(dplyr)
### Anastassiadis 2011 data
# read data
# all at 0.5uM
path <- "~/home/github/local/kis/data/anastassiadis2011.csv"
raw <- read.csv(path,
skip = 1,
stringsAsFactors = FALSE,
check.names = TRUE,
header = FALSE)
# clean data
data <- raw[3:302, 1:179]
inhibitor_names <- raw[1, 1:179]
inhibitor_names <- str_replace_all(unlist(inhibitor_names), "[ ]+", " ")
inhibitor_names <- str_replace_all(unlist(inhibitor_names), "\x9a", "o")
#inhibitors <- raw[2, 1:179]
colnames(data) <- paste(inhibitor_names, "0.5", sep = "@")
colnames(data)[1] <- "kinase"
# convert data to long format
data <- melt(data,
id.vars = "kinase",
variable.name = "compound",
value.name = "percent_activity")
data$compound <- as.character(data$compound)
data$percent_activity <- as.numeric(data$percent_activity)
data <- data[complete.cases(data), ]
data <- select(data, kinase, compound, percent_activity)
anastassiadis2011 <- data
save(anastassiadis2011, file = "~/home/github/local/kis/anastassiadis2011.RData")
### Gao 2013 data
# read data
path <- "~/home/github/local/kis/data/gao2013.csv"
raw <- read.csv(path,
skip = 1,
stringsAsFactors = FALSE,
check.names = TRUE,
header = FALSE)
# clean data
data <- raw[2:235, ]
inhibitor_names <- unlist(raw[1, -1])
Encoding(inhibitor_names) <- "UTF-8"
inhibitor_names <- str_split(inhibitor_names, " @ ")
inhibitors <- sapply(inhibitor_names, "[", 1)
inhibitors <- str_replace(inhibitors, "\x9a", "o")
concentration <- sapply(inhibitor_names, "[", 2)
concentration <- str_extract(concentration, "^[10]{1,2}")
inhibitors <- paste(inhibitors, concentration, sep = "@")
inhibitors <- c("kinase", inhibitors)
colnames(data) <- inhibitors
data <- data %>%
melt(id.vars = "kinase", variable.name = "compound", value.name = "percent_activity")
data$percent_activity <- as.numeric(data$percent_activity)
data <- data[complete.cases(data), ]
gao2013 <- data
save(gao2013, file = "~/home/github/local/kis/gao2013.RData")
### Kinase screen mrc data
path_screen <- "~/home/github/local/kis/data/kinase_inhibitor_results_2014-10-18T04-26-51.csv"
raw <- read.csv(path_screen, stringsAsFactors = FALSE)
data <- raw %>% select(Kinase, CNumber, Screen.Conc, Inhibition)
names(data) <- c("kinase", "compound", "concentration", "percent_activity")
path_names <- "~/home/github/local/kis/data/kinase_inhibitor_list_2014-10-18T04-00-06.csv"
inhibitor_names <- read.csv(path_names, stringsAsFactors = FALSE)
inhibitors <- inhibitor_names$Inhibitor
names(inhibitors) <- inhibitor_names$CNumber
data$compound <- inhibitors[as.character(data$compound)]
data$concentration <- str_replace(data$concentration, " ", "")
data$concentration <- as.numeric(data$concentration)
data$percent_activity <- as.numeric(data$percent_activity)
data <- data %>%
unite(data, compound, concentration, sep = "@") %>%
arrange(kinase)
kid2014 <- data
save(kid2014, file = "~/home/github/local/kis/kid2014.RData")
shiny::runApp('home/github/local/kis')
head(data)
library(stringr)
library(reshape2)
library(tidyr)
library(dplyr)
### Anastassiadis 2011 data
# read data
# all at 0.5uM
path <- "~/home/github/local/kis/data/anastassiadis2011.csv"
raw <- read.csv(path,
skip = 1,
stringsAsFactors = FALSE,
check.names = TRUE,
header = FALSE)
# clean data
data <- raw[3:302, 1:179]
inhibitor_names <- raw[1, 1:179]
inhibitor_names <- str_replace_all(unlist(inhibitor_names), "[ ]+", " ")
inhibitor_names <- str_replace_all(unlist(inhibitor_names), "\x9a", "o")
#inhibitors <- raw[2, 1:179]
colnames(data) <- paste(inhibitor_names, "0.5", sep = "@")
colnames(data)[1] <- "kinase"
# convert data to long format
data <- melt(data,
id.vars = "kinase",
variable.name = "compound",
value.name = "percent_activity")
data$compound <- as.character(data$compound)
data$percent_activity <- as.numeric(data$percent_activity)
data <- data[complete.cases(data), ]
data <- select(data, kinase, compound, percent_activity)
anastassiadis2011 <- data
save(anastassiadis2011, file = "~/home/github/local/kis/anastassiadis2011.RData")
### Gao 2013 data
# read data
path <- "~/home/github/local/kis/data/gao2013.csv"
raw <- read.csv(path,
skip = 1,
stringsAsFactors = FALSE,
check.names = TRUE,
header = FALSE)
# clean data
data <- raw[2:235, ]
inhibitor_names <- unlist(raw[1, -1])
Encoding(inhibitor_names) <- "UTF-8"
inhibitor_names <- str_split(inhibitor_names, " @ ")
inhibitors <- sapply(inhibitor_names, "[", 1)
inhibitors <- str_replace(inhibitors, "\x9a", "o")
concentration <- sapply(inhibitor_names, "[", 2)
concentration <- str_extract(concentration, "^[10]{1,2}")
inhibitors <- paste(inhibitors, concentration, sep = "@")
inhibitors <- c("kinase", inhibitors)
colnames(data) <- inhibitors
data <- data %>%
melt(id.vars = "kinase", variable.name = "compound", value.name = "percent_activity")
data$percent_activity <- as.numeric(data$percent_activity)
data <- data[complete.cases(data), ]
gao2013 <- data
save(gao2013, file = "~/home/github/local/kis/gao2013.RData")
### Kinase screen mrc data
path_screen <- "~/home/github/local/kis/data/kinase_inhibitor_results_2014-10-18T04-26-51.csv"
raw <- read.csv(path_screen, stringsAsFactors = FALSE)
data <- raw %>% select(Kinase, CNumber, Screen.Conc, Inhibition)
names(data) <- c("kinase", "compound", "concentration", "percent_activity")
path_names <- "~/home/github/local/kis/data/kinase_inhibitor_list_2014-10-18T04-00-06.csv"
inhibitor_names <- read.csv(path_names, stringsAsFactors = FALSE)
inhibitors <- inhibitor_names$Inhibitor
names(inhibitors) <- inhibitor_names$CNumber
data$compound <- inhibitors[as.character(data$compound)]
data$concentration <- str_replace(data$concentration, " ", "")
data$concentration <- as.numeric(data$concentration)
data$percent_activity <- as.numeric(data$percent_activity)
data <- data %>%
unite(data, compound, concentration, sep = "@") %>%
arrange(kinase)
names(data)[2] <- "compound"
kid2014 <- data
save(kid2014, file = "~/home/github/local/kis/kid2014.RData")
head(data)
shiny::runApp('home/github/local/kis')
head(data)
data <- data %>% group_by(kinase, compound) %>% tally()
data
all(data$n == 1)
which(data$n != 1)
data[which(data$n != 1), ]
any(duplicated(data))
head(data)
any(duplicated(kid2014))
library(stringr)
library(reshape2)
library(tidyr)
library(dplyr)
### Anastassiadis 2011 data
# read data
# all at 0.5uM
path <- "~/home/github/local/kis/data/anastassiadis2011.csv"
raw <- read.csv(path,
skip = 1,
stringsAsFactors = FALSE,
check.names = TRUE,
header = FALSE)
# clean data
data <- raw[3:302, 1:179]
inhibitor_names <- raw[1, 1:179]
inhibitor_names <- str_replace_all(unlist(inhibitor_names), "[ ]+", " ")
inhibitor_names <- str_replace_all(unlist(inhibitor_names), "\x9a", "o")
#inhibitors <- raw[2, 1:179]
colnames(data) <- paste(inhibitor_names, "0.5", sep = "@")
colnames(data)[1] <- "kinase"
# convert data to long format
data <- melt(data,
id.vars = "kinase",
variable.name = "compound",
value.name = "percent_activity")
data$compound <- as.character(data$compound)
data$percent_activity <- as.numeric(data$percent_activity)
data <- data[complete.cases(data), ]
data <- select(data, kinase, compound, percent_activity)
anastassiadis2011 <- data
save(anastassiadis2011, file = "~/home/github/local/kis/anastassiadis2011.RData")
### Gao 2013 data
# read data
path <- "~/home/github/local/kis/data/gao2013.csv"
raw <- read.csv(path,
skip = 1,
stringsAsFactors = FALSE,
check.names = TRUE,
header = FALSE)
# clean data
data <- raw[2:235, ]
inhibitor_names <- unlist(raw[1, -1])
Encoding(inhibitor_names) <- "UTF-8"
inhibitor_names <- str_split(inhibitor_names, " @ ")
inhibitors <- sapply(inhibitor_names, "[", 1)
inhibitors <- str_replace(inhibitors, "\x9a", "o")
concentration <- sapply(inhibitor_names, "[", 2)
concentration <- str_extract(concentration, "^[10]{1,2}")
inhibitors <- paste(inhibitors, concentration, sep = "@")
inhibitors <- c("kinase", inhibitors)
colnames(data) <- inhibitors
data <- data %>%
melt(id.vars = "kinase", variable.name = "compound", value.name = "percent_activity")
data$percent_activity <- as.numeric(data$percent_activity)
data <- data[complete.cases(data), ]
gao2013 <- data
save(gao2013, file = "~/home/github/local/kis/gao2013.RData")
### Kinase screen mrc data
path_screen <- "~/home/github/local/kis/data/kinase_inhibitor_results_2014-10-18T04-26-51.csv"
raw <- read.csv(path_screen, stringsAsFactors = FALSE)
data <- raw %>% select(Kinase, CNumber, Screen.Conc, Inhibition)
names(data) <- c("kinase", "compound", "concentration", "percent_activity")
path_names <- "~/home/github/local/kis/data/kinase_inhibitor_list_2014-10-18T04-00-06.csv"
inhibitor_names <- read.csv(path_names, stringsAsFactors = FALSE)
inhibitors <- inhibitor_names$Inhibitor
names(inhibitors) <- inhibitor_names$CNumber
data$compound <- inhibitors[as.character(data$compound)]
data$concentration <- str_replace(data$concentration, " ", "")
data$concentration <- as.numeric(data$concentration)
data$percent_activity <- as.numeric(data$percent_activity)
data <- data %>%
unite(data, compound, concentration, sep = "@") %>%
arrange(kinase)
names(data)[2] <- "compound"
data <- data[!duplicated(data), ]
kid2014 <- data
save(kid2014, file = "~/home/github/local/kis/kid2014.RData")
shiny::runApp('home/github/local/kis')
library(shiny)
runGitHub("jeslipp/kis")
shiny::runApp('home/github/local/kis')
shiny::runApp('home/github/local/kis')
shiny::runApp('home/github/local/kis')
shiny::runApp('home/github/local/kis')
shiny::runApp('home/github/local/kis')
shiny::runApp('home/github/local/kis')
shiny::runApp('home/github/local/kis')
shiny::runApp('home/github/local/kis')
shiny::runApp('home/github/local/kis')
shiny::runApp('home/github/local/kis')
shiny::runApp('home/github/local/kis')
?round
shiny::runApp('home/github/local/kis')
shiny::runApp('home/github/local/kis')
shiny::runApp('home/github/local/kis')
shiny::runApp('home/github/local/kis')
shiny::runApp('home/github/local/kis')
rm(list = ls())
library(shiny)
runGitHub("jeslipp/kis")
library(stringr)
library(reshape2)
library(tidyr)
library(dplyr)
### Anastassiadis 2011 data
# read data
# all at 0.5uM
path <- "~/home/github/local/kis/data/anastassiadis2011.csv"
raw <- read.csv(path,
skip = 1,
stringsAsFactors = FALSE,
check.names = TRUE,
header = FALSE)
browse()
# clean data
data <- raw[3:302, 1:179]
inhibitor_names <- raw[1, 1:179]
inhibitor_names <- str_replace_all(unlist(inhibitor_names), "[ ]+", " ")
inhibitor_names <- str_replace_all(unlist(inhibitor_names), "\x9a", "o")
#inhibitors <- raw[2, 1:179]
colnames(data) <- paste(inhibitor_names, "0.5", sep = "@")
colnames(data)[1] <- "kinase"
rm(list = ls())
library(stringr)
library(reshape2)
library(tidyr)
library(dplyr)
### Anastassiadis 2011 data
# read data
# all at 0.5uM
path <- "~/home/github/local/kis/data/anastassiadis2011.csv"
raw <- read.csv(path,
skip = 1,
stringsAsFactors = FALSE,
check.names = TRUE,
header = FALSE)
browser()
# clean data
data <- raw[3:302, 1:179]
inhibitor_names <- raw[1, 1:179]
inhibitor_names <- str_replace_all(unlist(inhibitor_names), "[ ]+", " ")
inhibitor_names <- str_replace_all(unlist(inhibitor_names), "\x9a", "o")
#inhibitors <- raw[2, 1:179]
colnames(data) <- paste(inhibitor_names, "0.5", sep = "@")
colnames(data)[1] <- "kinase"
path
head(inhibitor_names)
quit
exit
q
e
done
library(RSQLite)
con <- dbConnect(drv = RSQLite)
con <- dbConnect(drv = RSQLite())
con <- dbConnect(drv = SQLite())
?dbConnect
con <- dbConnect(RSQLite::SQLite(), ":memory:")
# Copy in the built-in mtcars data frame
dbWriteTable(con, "mtcars", mtcars, row.names = FALSE)
con
?dbWriteTable
dbWriteTable(conn = con, name = "mtcars", mtcars, row.names = FALSE)
dbWriteTable(conn = con, name = "mtcars", mtcars, row.names = FALSE, overwrite = TRUE)
res <- dbSendQuery(con, "SELECT * FROM mtcars WHERE cyl = 4 AND mpg < 23")
dbFetch(res)
class(res)
res$cyl
res <- dbSendQuery(con, "SELECT * FROM mtcars WHERE cyl = 4 AND mpg < 23")
dbFetch(res)
class(res)
res
res <- dbSendQuery(con, "SELECT * FROM mtcars WHERE cyl = 4")
while(!dbHasCompleted(res)){
chunk <- dbFetch(res, n = 10)
print(nrow(chunk))
}
dbClearResult(res)
dbDisconnect(con)
library(RISmed)
res <- EUtilsSummary("Aurora B", type='esearch', db='pubmed')
summary(res)
tally <- array()
x <- 1
for (i in 1970:2013){
Sys.sleep(1)
r <- EUtilsSummary('Aurora B', type='esearch', db='pubmed', mindate=i, maxdate=i)
tally[x] <- QueryCount(r)
x <- x + 1
}
names(tally) <- 1970:2013
barplot(tally, las=2, main="Number of PubMed articles containing Aurora B")
head(tally)
tally
cumsum(tally)
diff(tally)
?diff
?ts
x <- as.ts(tally)
diff(x)
diff(tally, lag = 1)
diff(tally, lag = 2)
diff(tally, lag = 10)
?diff
sapply(tally, diff)
library(zoo)
help(package=zoo)
as.zoo(tally)
x <- as.zoo(tally)
diff.zoo(x)
diff(x)
diff(x, lag = -1)
lag(x)
?lag
tally
diff(cumsum(tally))
cumsum(tally)
tally <- array()
x <- 1
for (i in 1970:2014){
Sys.sleep(1)
r <- EUtilsSummary('Aurora B', type='esearch', db='pubmed', mindate=i, maxdate=i)
tally[x] <- QueryCount(r)
x <- x + 1
}
names(tally) <- 1970:2014
barplot(tally, las=2, main="Number of PubMed articles containing Aurora B")
diff(cumsum(tally))
tally <- array()
x <- 1
for (i in 1970:2014){
Sys.sleep(1)
r <- EUtilsSummary('Aurora A', type='esearch', db='pubmed', mindate=i, maxdate=i)
tally[x] <- QueryCount(r)
x <- x + 1
}
names(tally) <- 1970:2014
barplot(tally, las=2, main="Number of PubMed articles containing Aurora B")
diff(cumsum(tally))
getSlots("Medline") # Available methods
fetch <- EUtilsGet(res)
ArticleTitle(fetch)[1:5]
Year(fetch)[1:5]
res
fetch
getSlots("Medline") # Available methods
PMID(fetch)
getSlots("Medline") # Available methods
AbstractText(fetch)[1:5]
getSlots("Medline") # Available methods
Issue(fetch)
getSlots("Medline") # Available methods
ISSN(fetch)[1:5]
Agency(fetch)[1:5]
setwd("~/home/github/kis/")
